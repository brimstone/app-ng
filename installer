#!/bin/sh
set -euo pipefail

get_partition_name(){
	sgdisk -i "$2" "$1" | awk -F"'" '/Partition name/ {print $2}'
}

check_disk(){
	[ "$(get_partition_name "$1" "1")" = "EFI System Partition" ] || return 1
	[ "$(get_partition_name "$1" "2")" = "Linux /boot" ] || return 1
	[ "$(get_partition_name "$1" "3")" = "Linux Data" ] || return 1
}

partition_disk(){
	sgdisk -og "$1" \
	 -n 1:2048:411647 -c 1:"EFI System Partition" -t 1:ef00 \
	 -n 2:411647:823295 -c 2:"Linux /boot" -t 2:8300 \
	 -n 3 -c 3:"Linux Data" -t 3:8e00 \
	--attributes=2:set:2 "$1" 
	sgdisk -p "$1"
	format_boot "$1"
	format_date "$1"
}

grow_disk(){
	sgdisk -e "$1"
}

format_date(){
	mkfs.ext4 -L DATA "$1"3
}

format_boot(){
	mkfs.ext4 -L BOOT "$1"2
}

check_boot(){
	[ -d /boot ] || mkdir /boot
	mount LABEL=BOOT /boot || (
		format_boot "$1"
		mount LABEL=BOOT /boot
	)
	extlinux --install "/boot"
	cat /share/syslinux/gptmbr.bin > "$1"
	write_syslinuxcfg
}

write_syslinuxcfg(){
	mkdir -p /boot/syslinux
	cat <<dog >/boot/syslinux/syslinux.cfg
PROMPT 1
DEFAULT primary
TIMEOUT 30

LABEL primary
	KERNEL /primary
	APPEND initrd=/primary.xz cgroup_enable=memory swapaccount=1

LABEL backup
	KERNEL /backup
	APPEND initrd=/backup.xz cgroup_enable=memory swapaccount=1
dog
}

copy_files(){
	mv /boot/primary /boot/backup || true
	mv /boot/primary.gz /boot/backup.gz || true
	cp kernel.gz /boot/primary
	cp initrd.xz /boot/primary.xz
}

if [ -z "$1" ]; then
	echo "Usage: $0 <device>"
fi

echo "Checking disk for partitions"
check_disk "$1" || partition_disk "$1"

#grow_disk "$1"

echo "Checking boot partition"
check_boot "$1"

echo "Copying OS files"
copy_files "$1"
umount /boot

echo "Mounting data"
mount LABEL=DATA /data || true

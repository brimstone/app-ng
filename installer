#!/bin/sh
set -euo pipefail

get_partition_name(){
	sgdisk -i "$2" "$1" | awk -F"'" '/Partition name/ {print $2}'
}

check_disk(){
	[ "$(get_partition_name "$1" "1")" = "BIOS Boot Partition" ] || return 1
	[ "$(get_partition_name "$1" "2")" = "EFI System Partition" ] || return 1
	[ "$(get_partition_name "$1" "3")" = "Linux /boot" ] || return 1
	[ "$(get_partition_name "$1" "4")" = "Linux Data" ] || return 1
}

partition_disk(){
	sgdisk -og "$1" \
	 -n 1:2048:4095 -c 1:"BIOS Boot Partition" -t 1:ef02 \
	 -n 2:4096:413695 -c 2:"EFI System Partition" -t 2:ef00 \
	 -n 3:413696:823295 -c 3:"Linux /boot" -t 3:8300 \
	 -N 4 -c 4:"Linux Data" -t 4:8e00 "$1"
	sgdisk -p "$1"
	format_boot "$1"
	format_date "$1"
}

grow_disk(){
	sgdisk -e "$1"
	#largest="$(sgdisk -E "$1")"
	#if [ "$largest" -gt 2048 ]; then
		
	#fi
}

format_date(){
	mkfs.ext4 -L DATA "$1"4
}

format_boot(){
	mkfs.ext4 -L BOOT "$1"3
}

check_boot(){
	[ -d /boot ] || mkdir /boot
	mount LABEL=BOOT /boot || (
		format_boot "$1"
		mount LABEL=BOOT /boot
	)
	grub-install --recheck "$1"
	write_grubcfg
}

write_grubcfg(){
	cat <<dog >/boot/grub/grub.cfg
set timeout_style=menu
set timeout=10
menuentry 'Primary' {
        insmod part_gpt
        insmod ext2
        echo "Loading kernel..."
        linux /primary cgroup_enable=memory swapaccount=1
        echo "Loading initial ramdisk..."
        initrd /primary.gz
}
menuentry 'Backup' {
        insmod part_gpt
        insmod ext2
        echo "Loading kernel..."
        linux /backup cgroup_enable=memory swapaccount=1
        echo "Loading initial ramdisk..."
        initrd /backup.gz
}
dog
}

copy_files(){
	mv /boot/primary /boot/backup || true
	mv /boot/primary.gz /boot/backup.gz || true
	cp vmlinuz /boot/primary
	cp initrd.gz /boot/primary.gz
}

if [ -z "$1" ]; then
	echo "Usage: $0 <device>"
fi

echo "Checking disk for partitions"
check_disk "$1" || partition_disk "$1"

#grow_disk "$1"

echo "Checking boot partition"
check_boot "$1"

echo "Copying OS files"
copy_files "$1"
umount /boot

echo "Mounting data"
mount LABEL=DATA /data || true

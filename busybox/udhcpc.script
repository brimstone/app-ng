#!/bin/sh
# udhcpc script edited by Tim Riker <Tim@Rikers.org>

set_classless_routes() {
	local max=128
	local type
	gw="$2"
	while [ -n "$1" -a -n "$2" -a $max -gt 0 ]; do
		gw="$2"
		if [ "$gw" = "0.0.0.0" ]; then
			gw=""
		else
			gw="gw $gw"
		fi
		if [ ${1##*/} -eq 32 ]; then
			type=host
			echo "udhcpc: adding route for $type $1 via $2"
			route add -$type "${1%%/*}" $gw dev "$interface"
		else
			type=net
			echo "udhcpc: adding route for $type $1 via $2"
			route add -$type "$1" $gw dev "$interface"
		fi
		max=$(($max-1))
		shift 2
	done
}

RESOLV_CONF="/etc/resolv.conf"

[ -n "$1" ] || { echo "Error: should be called from udhcpc"; exit 1; }

NETMASK=""
[ -n "$subnet" ] && NETMASK="netmask $subnet"
BROADCAST="broadcast +"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"

set

case "$1" in
	deconfig)
		echo "Setting IP address 0.0.0.0 on $interface"
		ifconfig $interface 0.0.0.0
		;;

	renew|bound)
		echo "Setting IP address $ip on $interface"
		ifconfig $interface $ip $NETMASK $BROADCAST

		if [ -n "$mtu" ]; then
			ifconfig $interface mtu $mtu
		fi

		[ -n "$staticroutes" ] && set_classless_routes $staticroutes
		[ -n "$msstaticroutes" ] && set_classless_routes $msstaticroutes

		if [ -n "$router" ] ; then
			echo "Deleting routers"
			while route del default gw 0.0.0.0 dev $interface ; do
				:
			done

			metric=0
			for i in $router ; do
				echo "Adding router $i"
				route add default gw $i dev $interface metric $metric
				: $(( metric += 1 ))
			done
		fi

		echo "Recreating $RESOLV_CONF"
		# If the file is a symlink somewhere (like /etc/resolv.conf
		# pointing to /run/resolv.conf), make sure things work.
		realconf=$(readlink -f "$RESOLV_CONF" 2>/dev/null || echo "$RESOLV_CONF")
		tmpfile="$realconf-$$"
		> "$tmpfile"
		[ -n "$domain" ] && echo "search $domain" >> "$tmpfile"
		for i in $dns ; do
			echo " Adding DNS server $i"
			echo "nameserver $i" >> "$tmpfile"
		done
		mv "$tmpfile" "$realconf"
		;;
esac

exit 0
